#tag ClassProtected Class theme	#tag Method, Flags = &h21		Private Function colorToString(c as color) As string		  dim red,blue,green as string		  		  red = str(c.Red)		  blue = str(c.Blue)		  green = str(c.Green)		  		  return red+","+green+","+blue		  		exception// an exception occurred preventing the conversion		  return ""		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub Constructor(tempDB as REALSQLDatabase)		  themeDB = tempDB		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function create(theName as String) As boolean		  dim success as boolean		  success = false		  		  if theName = "" then		    return success		  else		    //Build the new database record		    dim rec as DatabaseRecord		    rec = New DatabaseRecord		    		    		    rec.Column("name") = theName		    rec.BooleanColumn("scaleBackground") = scaleBackground		    		    //Colors		    rec.Column("backgroundColor") = colorToString(backgroundColor)		    rec.Column("defaultText") = colorToString(defaultText)		    rec.Column("generalConfigScreenText") = colorToString(generalConfigScreenText)		    rec.Column("mainScreenText") = colorToString(mainScreenText)		    rec.Column("raceConfigScreenText1") = colorToString(raceConfigScreenText1)		    rec.Column("raceConfigScreenText2") = colorToString(raceConfigScreenText2)		    rec.Column("raceConfigScreenText3") = colorToString(raceConfigScreenText3)		    rec.Column("raceScreenText") = colorToString(raceScreenText)		    rec.Column("statisticsScreenText") = colorToString(statisticsScreenText)		    rec.Column("editRacerScreenText1") = colorToString(editRacerScreenText1)		    rec.Column("editRacerScreenText2") = colorToString(editRacerScreenText2)		    rec.Column("topicText") = colorToString(topicText)		    rec.Column("navigationText") = colorToString(navigationText)		    		    //Button text offsets for overlay on images		    rec.IntegerColumn("topicOffsetX") = topicOffsetX		    rec.IntegerColumn("topicOffsetY") = topicOffsetY		    rec.IntegerColumn("navigationOffsetX") = navigationOffsetX		    rec.IntegerColumn("navigationOffsetX") = navigationOffsetX		    		    //Audio		    //Check to see if files were selected, if so use them, else use the string version		    if F_countdownBeep <> Nil then		      rec.BlobColumn("countdownBeep") = folderItemToString(F_countdownBeep)		    else		      rec.BlobColumn("countdownBeep") = S_countdownBeep		    end if		    if F_endingHorn <> Nil then		      rec.BlobColumn("endingHorn") = folderItemToString(F_endingHorn)		    else		      rec.BlobColumn("endingHorn") = S_endingHorn		    end if		    if F_lapBeep <> Nil then		      rec.BlobColumn("lapBeep") = folderItemToString(F_lapBeep)		    else		      rec.BlobColumn("lapBeep") = S_lapBeep		    end if		    if F_startingHorn <> Nil then		      rec.BlobColumn("startingHorn") = folderItemToString(F_startingHorn)		    else		      rec.BlobColumn("startingHorn") = S_startingHorn		    end if		    		    //Images		    rec.BlobColumn("backgroundImage") = pictureToString(backgroundImage)		    rec.BlobColumn("editRacers_Button") = pictureToString(editRacers_Button)		    rec.BlobColumn("editRacers_Mask") = pictureToString(editRacers_Mask)		    rec.BlobColumn("editRacers_MouseOver") = pictureToString(editRacers_MouseOver)		    rec.BlobColumn("generalConfig_Button") = pictureToString(generalConfig_Button)		    rec.BlobColumn("generalConfig_Mask") = pictureToString(generalConfig_Mask)		    rec.BlobColumn("generalConfig_MouseOver") = pictureToString(generalConfig_MouseOver)		    rec.BlobColumn("main_Button") = pictureToString(main_Button)		    rec.BlobColumn("main_Mask") = pictureToString(main_Mask)		    rec.BlobColumn("main_MouseOver") = pictureToString(main_MouseOver)		    rec.BlobColumn("raceConfig_Button") = pictureToString(raceConfig_Button)		    rec.BlobColumn("raceConfig_Mask") = pictureToString(raceConfig_Mask)		    rec.BlobColumn("raceConfig_MouseOver") = pictureToString(raceConfig_MouseOver)		    rec.BlobColumn("raceScreen_Button") = pictureToString(raceScreen_Button)		    rec.BlobColumn("raceScreen_Mask") = pictureToString(raceScreen_Mask)		    rec.BlobColumn("raceScreen_MouseOver") = pictureToString(raceScreen_MouseOver)		    rec.BlobColumn("emptyRacer") = pictureToString(emptyRacer)		    rec.BlobColumn("emptyRacer_Mask") = pictureToString(emptyRacer_Mask)		    rec.BlobColumn("mainLogo") = pictureToString(mainLogo)		    rec.BlobColumn("mainLogo_Mask") = pictureToString(mainLogo_Mask)		    rec.BlobColumn("statistics_Button") = pictureToString(statistics_Button)		    rec.BlobColumn("statistics_Mask") = pictureToString(statistics_Mask)		    rec.BlobColumn("statistics_MouseOver") = pictureToString(statistics_MouseOver)		    rec.BlobColumn("countdown0") = pictureToString(countdown0)		    rec.BlobColumn("countdown1") = pictureToString(countdown1)		    rec.BlobColumn("countdown2") = pictureToString(countdown2)		    rec.BlobColumn("countdown3") = pictureToString(countdown3)		    rec.BlobColumn("countdown4") = pictureToString(countdown4)		    rec.BlobColumn("countdown5") = pictureToString(countdown5)		    rec.BlobColumn("countdown10") = pictureToString(countdown10)		    rec.BlobColumn("gettingStarted_Button") = pictureToString(gettingStarted_Button)		    rec.BlobColumn("gettingStarted_Mask") = pictureToString(gettingStarted_Mask)		    rec.BlobColumn("setUp_Button") = pictureToString(setUp_Button)		    rec.BlobColumn("setUp_Mask") = pictureToString(setUp_Mask)		    rec.BlobColumn("startARace_Button") = pictureToString(startARace_Button)		    rec.BlobColumn("startARace_Mask") = pictureToString(startARace_Mask)		    rec.BlobColumn("advancedTopics_Button") = pictureToString(advancedTopics_Button)		    rec.BlobColumn("advancedTopics_Mask") = pictureToString(advancedTopics_Mask)		    rec.BlobColumn("topic_Button") =  pictureToString(topic_Button)		    rec.BlobColumn("topic_Mask") =  pictureToString(topic_Mask)		    rec.BlobColumn("navigation_Button") =  pictureToString(navigation_Button)		    rec.BlobColumn("navigation_Mask") =  pictureToString(navigation_Mask)		    rec.BlobColumn("navigation_MouseOver") =  pictureToString(navigation_MouseOver)		    		    //Define the version of the theme		    if topic_Button = Nil or navigation_Button = Nil or navigation_MouseOver = Nil then		      rec.IntegerColumn("version") = 1		    else		      rec.IntegerColumn("version") = 2		    end if		    		    //Insert record into database		    G_Database.InsertRecord("theme_table", rec)		    		    if G_Database.Error = True then		      MsgBox "Error inserting theme, " + G_Database.ErrorMessage		      G_Database.Rollback		    else		      G_Database.Commit		      themeCreated(themeName)		      success = true		    end if		  end if		  		  Return success		  		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub delete(theName as string, override as boolean)		  if theName <> "Flip Side" or override = true then		    		    //Delete the profile		    G_Database.SQLExecute("DELETE FROM theme_table WHERE name = '" + theName + "'")		    		    //Check for an error		    if G_Database.Error = true then		      MsgBox "Error deleting theme"		      G_Database.Rollback		    else		      G_Database.Commit		      themeDeleted(theName)		      		    end if		    		  else		    		    MsgBox t_defaultthemecannotdelete		    		  end if		  		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub export(theName as string)		  Dim xml as XmlDocument		  Dim root as XMLNode		  Dim rootchild as XMLNode		  Dim rs as RecordSet		  dim i as Integer		  Dim dlg as SaveAsDialog		  dim f as FolderItem		  dim g as FolderItem		  dim w as FolderItem		  if theName = "" then		    //We were not give a name to export bail		    MsgBox t_pleaseselectthemtoexport		    return		  end if		  		  		  w = GetFolderItem("")		  		  g = GetFolderItem("", 0)		  dlg= New SaveAsDialog		  dlg.Title=t_save		  dlg.InitialDirectory = w.Child("theme")		  if TargetLinux = true then		    dlg.InitialDirectory = SpecialFolder.UserHome		  else		    dlg.InitialDirectory = SpecialFolder.Desktop		  end if		  dlg.SuggestedFileName = "theme_"+theName+".txt"		  f=dlg.ShowModal()		  		  if f <> Nil then		    //Do nothing here		  else		    MsgBox t_youmustchoosefile		    Return		  end if		  		  		  //Find the record		  rs = G_Database.SQLSelect("SELECT * FROM theme_table where name= '"+theName+"'")		  		  if rs <> Nil then		    if rs.RecordCount = 0 then		      MsgBox "No theme selected for export, please select a theme first"		      return		    end if		    		    		    //We have a record so do something		    		    //Create the root element of the XML file		    xml = New XmlDocument		    root = xml.AppendChild(xml.CreateElement("Theme"))		    		    for i = 1 to rs.FieldCount		      		      if rs.IdxField(i).Name <> "" and rs.IdxField(i).StringValue<> "" then		        		        rootchild = root.AppendChild(xml.CreateElement(rs.IdxField(i).Name))		        rootchild.AppendChild(xml.CreateTextNode(rs.IdxField(i).StringValue))		      end if		    next		    		    xml.SaveXml(f)		  else		    MsgBox "No theme to export"		    Return		  end if		End Sub	#tag EndMethod	#tag Method, Flags = &h21		Private Function folderItemToString(f as FolderItem) As string		  //Convert a file from the file system to a string for base64 encoding		  		  dim bs as binaryStream		  dim data as string		  		  // read the data in from the temp file		  bs = BinaryStream.Open(f,false )		  data = bs.read( bs.length )		  bs.close		  		  // return the binary data		  return EncodeBase64(data,0)		  		exception// an exception occurred preventing the conversion		  return ""		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function import() As string		  dim success as string		  success = ""		  		  dim dlg as OpenDialog		  dim f as FolderItem		  dim g as FolderItem		  dim w as FolderItem		  		  //Get the user to select a file		  w = GetFolderItem("")		  		  g = GetFolderItem("", 0)		  dlg= New OpenDialog		  dlg.Title="Select a theme file to import"		  dlg.InitialDirectory = w.Child("theme")		  f=dlg.ShowModal()		  		  dim xdoc as XmlDocument		  dim root as XmlNode		  dim i,count as Integer		  dim item as string		  dim rec as DatabaseRecord		  dim theName as string		  rec = New DatabaseRecord		  //Set version to 1 in case an old theme is imported prior specifying the version and any default values		  rec.IntegerColumn("version") = 1		  rec.IntegerColumn("topicOffsetX") = 0		  rec.IntegerColumn("topicOffsetY") = 0		  rec.IntegerColumn("navigationOffsetX") = 0		  rec.IntegerColumn("navigationOffsetY") = 0		  rec.Column("topicText") = "0,0,0"		  rec.Column("navigationText") = "255,255,255"		  //If we have a valid file then we need to read it as an xml file to process it		  //Items are individually listed instead of creating a dynamic recursive loop that uses the root.name as the column name without a a select case		  //This is to prevent the program from trying to insert columns that do not exist since as the software gets updates new columns will be introduced		  //All the column names here should match what is in the set method		  if f<>nil then		    		    xdoc = New XmlDocument(f)//parses all the information required into the xml object		    		    count = xdoc.DocumentElement.ChildCount		    		    for i=0 to count-1		      root = xdoc.DocumentElement.Child(i)		      		      item = root.FirstChild.Value		      		      select case root.Name		      case "version"		        rec.IntegerColumn(root.Name) = val(item)		      case "name"		        rec.Column("name") = item		        //Set this variable for checking for duplicates later		        theName = item		      case "scaleBackground"		        if item = "true" then		          rec.BooleanColumn(root.Name) = True		        else		          rec.BooleanColumn(root.Name) = False		        end if		      case "backgroundColor"		        rec.Column(root.Name) = item		      case "defaultText"		        rec.Column(root.Name) = item		      case "generalConfigScreenText"		        rec.Column(root.Name) = item		      case "mainScreenText"		        rec.Column(root.Name) = item		      case "raceConfigScreenText1"		        rec.Column(root.Name) = item		      case "raceConfigScreenText2"		        rec.Column(root.Name) = item		      case "raceConfigScreenText3"		        rec.Column(root.Name) = item		      case "raceScreenText"		        rec.Column(root.Name) = item		      case "statisticsScreenText"		        rec.Column(root.Name) = item		      case "editRacerScreenText1"		        rec.Column(root.Name) = item		      case "editRacerScreenText2"		        rec.Column(root.Name) = item		      case "topicText"		        rec.Column(root.Name) = item		      case "navigationText"		        rec.Column(root.Name) = item		      case "topicOffsetX"		        rec.IntegerColumn(root.Name) = val(item)		      case "topicOffsetY"		        rec.IntegerColumn(root.Name) = val(item)		      case "navigationOffsetX"		        rec.IntegerColumn(root.Name) = val(item)		      case "navigationOffsetY"		        rec.IntegerColumn(root.Name) = val(item)		      case "countdownBeep"		        rec.BlobColumn(root.Name) = item		      case "endingHorn"		        rec.BlobColumn(root.Name) = item		      case "startingHorn"		        rec.BlobColumn(root.Name) = item		      case "lapBeep"		        rec.BlobColumn(root.Name) = item		      case "backgroundImage"		        rec.BlobColumn(root.Name) = item		      case "editRacers_Button"		        rec.BlobColumn(root.Name) = item		      case "editRacers_Mask"		        rec.BlobColumn(root.Name) = item		      case "editRacers_MouseOver"		        rec.BlobColumn(root.Name) = item		      case "generalConfig_Button"		        rec.BlobColumn(root.Name) = item		      case "generalConfig_Mask"		        rec.BlobColumn(root.Name) = item		      case "generalConfig_MouseOver"		        rec.BlobColumn(root.Name) = item		      case "main_Button"		        rec.BlobColumn(root.Name) = item		      case "main_Mask"		        rec.BlobColumn(root.Name) = item		      case "main_MouseOver"		        rec.BlobColumn(root.Name) = item		      case "raceConfig_Button"		        rec.BlobColumn(root.Name) = item		      case "raceConfig_Mask"		        rec.BlobColumn(root.Name) = item		      case "raceConfig_MouseOver"		        rec.BlobColumn(root.Name) = item		      case "raceScreen_Button"		        rec.BlobColumn(root.Name) = item		      case "raceScreen_Mask"		        rec.BlobColumn(root.Name) = item		      case "raceScreen_MouseOver"		        rec.BlobColumn(root.Name) = item		      case "emptyRacer"		        rec.BlobColumn(root.Name) = item		      case "emptyRacer_Mask"		        rec.BlobColumn(root.Name) = item		      case "mainLogo"		        rec.BlobColumn(root.Name) = item		      case "mainLogo_Mask"		        rec.BlobColumn(root.Name) = item		      case "statistics_Button"		        rec.BlobColumn(root.Name) = item		      case "statistics_Mask"		        rec.BlobColumn(root.Name) = item		      case "statistics_MouseOver"		        rec.BlobColumn(root.Name) = item		      case "countdown0"		        rec.BlobColumn(root.Name) = item		      case "countdown1"		        rec.BlobColumn(root.Name) = item		      case "countdown2"		        rec.BlobColumn(root.Name) = item		      case "countdown3"		        rec.BlobColumn(root.Name) = item		      case "countdown4"		        rec.BlobColumn(root.Name) = item		      case "countdown5"		        rec.BlobColumn(root.Name) = item		      case "countdown10"		        rec.BlobColumn(root.Name) = item		      case "gettingStarted_Button"		        rec.BlobColumn(root.Name) = item		      case "gettingStarted_Mask"		        rec.BlobColumn(root.Name) = item		      case "setUp_Button"		        rec.BlobColumn(root.Name) = item		      case "setUp_Mask"		        rec.BlobColumn(root.Name) = item		      case "startARace_Button"		        rec.BlobColumn(root.Name) = item		      case "startARace_Mask"		        rec.BlobColumn(root.Name) = item		      case "advancedTopics_Button"		        rec.BlobColumn(root.Name) = item		      case "advancedTopics_Mask"		        rec.BlobColumn(root.Name) = item		      case "topic_Button"		        rec.BlobColumn(root.Name) = item		      case "topic_Mask"		        rec.BlobColumn(root.Name) = item		      case "navigation_Button"		        rec.BlobColumn(root.Name) = item		      case "navigation_Mask"		        rec.BlobColumn(root.Name) = item		      case "navigation_MouseOver"		        rec.BlobColumn(root.Name) = item		      end Select		    next		  else		    //User did not select a file so we do not need to go any further		    success = ""		    Return success		  end if		  		  //We have built a database record, now we need to make sure there is not a duplicate record		  dim rs as RecordSet		  		  //Find the record		  rs = G_Database.SQLSelect("SELECT * FROM theme_table where name= '"+theName+"'")		  		  if rs <> Nil then		    		    if rs.RecordCount > 0 then		      //We have a duplicate record		      //We need to prompt the user about what they want to do		      dim d as new MessageDialog		      dim b as MessageDialogButton		      d.Icon = MessageDialog.GraphicCaution		      d.ActionButton.Caption = "Yes"		      d.CancelButton.Visible = True		      d.CancelButton.Caption = "No"		      d.Message = "A theme exists with this name, do you want to overwrite the existing theme?"		      b = d.ShowModal		      		      //Ok now we need to determine what the user pressed		      Select Case b		      case d.ActionButton		        //The user chose to overwrite the existing record, we can delete the existing record first		        delete(theName,true)		        G_Database.InsertRecord("theme_table",rec)		        		      case d.CancelButton		        //The user chose not to overwrite the record, we need to come up with a new name		        //We will just increment a number until we find a name not used or we hit the number 32 just so we do not get an infinite loop		        dim tempString as string		        dim tempName as string		        i = 0		        while rs.RecordCount > 0		          i = i + 1		          tempString = str(i)		          tempName = theName + tempString		          //Check to make sure we are not in an infinite looooop		          //If we are something went wrong		          if i > 31 then		            exit While		          end if		          rs = G_Database.SQLSelect("SELECT * FROM theme_table where name = '"+tempName+"'")		          		        wend		        //OK we should have a unique name by this point		        theName = theName + tempString		        rec.Column("name") = theName		        G_Database.InsertRecord("theme_table",rec)		        		      end select		      		      		    else		      //We do not have a duplicate record, we can insert the entry		      G_Database.InsertRecord("theme_table",rec)		      		    end if		  end if		  		  //OK we need to check to see if we got an error		  if G_Database.Error = true then		    MsgBox G_Database.ErrorMessage		    G_Database.Rollback		    success = ""		  else		    success = theName		    G_Database.Commit		  end if		  		  Return success		  		Exception		  MsgBox "Corrupt theme file selected"		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function listThemes() As String()		  dim rs as RecordSet		  dim s() as string		  		  //Find the record		  rs = G_Database.SQLSelect("SELECT name FROM theme_table")		  		  if rs <> nil then		    		    while rs.EOF = false		      s.Append rs.Field("name").StringValue		      rs.MoveNext		    wend		    		  end if		  		  rs.close		  return s()		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub newBlank(theName as String)		  if theName = "" then		    return		  else		    //Build the new database record		    dim rec as DatabaseRecord		    rec = New DatabaseRecord		    		    		    rec.Column("name") = theName		    		    //Insert record into database		    G_Database.InsertRecord("theme_table", rec)		    		    if G_Database.Error = True then		      MsgBox "Error inserting theme, " + G_Database.ErrorMessage		      G_Database.Rollback		    else		      G_Database.Commit		      themeCreated(theName)		    end if		  end if		End Sub	#tag EndMethod	#tag Method, Flags = &h21		Private Function pictureToString(p as picture) As string		  // Convert a picture to a string by saving the picture		  // out to a file on disk and then reading in the binary		  // data from that file.		  dim f as folderItem		  dim bs as binaryStream		  dim data as string		  		  //Make sure we got something		  if p = Nil then		    Return ""		  end if		  		  // save picture to a temporary file		  f = getTemporaryFolderItem()		  //f.saveAsPicture p		  p.Save(f,150)		  		  // read the data in from the temp file		  bs = BinaryStream.Open(f,false )		  data = bs.read( bs.length )		  bs.close		  		  // remove temporary file		  f.delete		  		  // return the binary data		  return EncodeBase64(data,0)		  		exception// an exception occurred preventing the conversion		  return ""		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub save(theName as string)		  dim rs as RecordSet		  dim status as boolean		  		  //Find the record		  rs = G_Database.SQLSelect("SELECT * FROM theme_table where name= '"+theName+"'")		  		  //Make sure we did not get a record, if we did delete it		  if rs <> nil then		    //Delete record		    delete(theName, true)		  end if		  		  //Recreate the record now		  status = create(theName)		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub set(theName as String)		  //this method queries the database for a theme and populates all the properties		  if theName = "" then		    //Set to default just in case		    theName = "Flip Side"		  end if		  		  		  dim rs as RecordSet		  		  //Find the record		  rs = G_Database.SQLSelect("SELECT * FROM theme_table where name= '"+theName+"'")		  		  //Make sure we got a record to work with		  if rs <> NIl then		    //make sure we actually have a record		    if rs.RecordCount < 1 then		      //We do not have a record, switch to default		      theName = "Flip Side"		      rs = G_Database.SQLSelect("SELECT * FROM theme_table where name= '"+theName+"'")		      		    end if		    		  else		    //Grab the default theme		    theName = "Flip Side"		    rs = G_Database.SQLSelect("SELECT * FROM theme_table where name= '"+theName+"'")		    		  end if		  		  		  if rs <> nil then		    		    themeName = rs.Field("name").StringValue		    scaleBackground = rs.Field("scaleBackground").BooleanValue		    		    //Get the version		    if rs.Field("version").StringValue <> "" then		      version = rs.Field("version").IntegerValue		    end if		    		    //We need to make sure we got values to work with		    //Colors		    if rs.Field("backgroundColor").StringValue <> "" then		      backgroundColor = stringToColor(rs.Field("backgroundColor").StringValue)		    end if		    if rs.Field("defaultText").StringValue <> "" then		      defaultText = stringToColor(rs.Field("defaultText").StringValue)		    end if		    if rs.Field("generalConfigScreenText").StringValue <> "" then		      generalConfigScreenText = stringToColor(rs.Field("generalConfigScreenText").StringValue)		    end if		    if rs.Field("mainScreenText").StringValue <> "" then		      mainScreenText = stringToColor(rs.Field("mainScreenText").StringValue)		    end if		    if rs.Field("raceConfigScreenText1").StringValue <> "" then		      raceConfigScreenText1 = stringToColor(rs.Field("raceConfigScreenText1").StringValue)		    end if		    if rs.Field("raceConfigScreenText2").StringValue <> "" then		      raceConfigScreenText2 = stringToColor(rs.Field("raceConfigScreenText2").StringValue)		    end if		    if rs.Field("raceConfigScreenText3").StringValue <> "" then		      raceConfigScreenText3 = stringToColor(rs.Field("raceConfigScreenText3").StringValue)		    end if		    if rs.Field("raceScreenText").StringValue <> "" then		      raceScreenText = stringToColor(rs.Field("raceScreenText").StringValue)		    end if		    if rs.Field("statisticsScreenText").StringValue <> "" then		      statisticsScreenText = stringToColor(rs.Field("statisticsScreenText").StringValue)		    end if		    if rs.Field("editRacerScreenText1").StringValue <> "" then		      editRacerScreenText1 = stringToColor(rs.Field("editRacerScreenText1").StringValue)		    end if		    if rs.Field("editRacerScreenText2").StringValue <> "" then		      editRacerScreenText2 = stringToColor(rs.Field("editRacerScreenText2").StringValue)		    end if		    if rs.Field("topicText").StringValue <> "" then		      topicText = stringToColor(rs.Field("topicText").StringValue)		    end if		    if rs.Field("navigationText").StringValue <> "" then		      navigationText = stringToColor(rs.Field("navigationText").StringValue)		    end if		    		    //Audio		    if rs.Field("countdownBeep").StringValue <> "" then		      S_countdownBeep = rs.Field("countdownBeep").StringValue		      countdownBeep = stringToSound(S_countdownBeep)		      countdownBeep.Volume = 100		    end if		    if rs.Field("endingHorn").StringValue <> "" then		      S_endingHorn = rs.Field("endingHorn").StringValue		      endingHorn = stringToSound(S_endingHorn)		      endingHorn.Volume = 100		    end if		    if rs.Field("lapBeep").StringValue <> "" then		      S_lapBeep = rs.Field("lapBeep").StringValue		      lapBeep = stringToSound(S_lapBeep)		      lapBeep.Volume = 100		    end if		    if rs.Field("startingHorn").StringValue <> "" then		      S_startingHorn = rs.Field("startingHorn").StringValue		      startingHorn = stringToSound(S_startingHorn)		      startingHorn.Volume = 100		    end if		    		    //Images		    if rs.Field("backgroundImage").StringValue <> "" then		      backgroundImage = stringToPicture(rs.Field("backgroundImage").StringValue)		    end if		    if rs.Field("editRacers_Button").StringValue <> "" then		      editRacers_Button = stringToPicture(rs.Field("editRacers_Button").StringValue)		    end if		    if rs.Field("editRacers_Mask").StringValue <> "" then		      editRacers_Mask = stringToPicture(rs.Field("editRacers_Mask").StringValue)		    end if		    if rs.Field("editRacers_MouseOver").StringValue <> "" then		      editRacers_MouseOver = stringToPicture(rs.Field("editRacers_MouseOver").StringValue)		    end if		    if rs.Field("generalConfig_Button").StringValue <> "" then		      generalConfig_Button = stringToPicture(rs.Field("generalConfig_Button").StringValue)		    end if		    if rs.Field("generalConfig_Mask").StringValue <> "" then		      generalConfig_Mask = stringToPicture(rs.Field("generalConfig_Mask").StringValue)		    end if		    if rs.Field("generalConfig_MouseOver").StringValue <> "" then		      generalConfig_MouseOver = stringToPicture(rs.Field("generalConfig_MouseOver").StringValue)		    end if		    if rs.Field("main_Button").StringValue <> "" then		      main_Button = stringToPicture(rs.Field("main_Button").StringValue)		    end if		    if rs.Field("main_Mask").StringValue <> "" then		      main_Mask = stringToPicture(rs.Field("main_Mask").StringValue)		    end if		    if rs.Field("main_MouseOver").StringValue <> "" then		      main_MouseOver = stringToPicture(rs.Field("main_MouseOver").StringValue)		    end if		    if rs.Field("raceConfig_Button").StringValue <> "" then		      raceConfig_Button = stringToPicture(rs.Field("raceConfig_Button").StringValue)		    end if		    if rs.Field("raceConfig_Mask").StringValue <> "" then		      raceConfig_Mask = stringToPicture(rs.Field("raceConfig_Mask").StringValue)		    end if		    if rs.Field("raceConfig_MouseOver").StringValue <> "" then		      raceConfig_MouseOver = stringToPicture(rs.Field("raceConfig_MouseOver").StringValue)		    end if		    if rs.Field("raceScreen_Button").StringValue <> "" then		      raceScreen_Button = stringToPicture(rs.Field("raceScreen_Button").StringValue)		    end if		    if rs.Field("raceScreen_Mask").StringValue <> "" then		      raceScreen_Mask = stringToPicture(rs.Field("raceScreen_Mask").StringValue)		    end if		    if rs.Field("raceScreen_MouseOver").StringValue <> "" then		      raceScreen_MouseOver = stringToPicture(rs.Field("raceScreen_MouseOver").StringValue)		    end if		    if rs.Field("emptyRacer").StringValue <> "" then		      emptyRacer = stringToPicture(rs.Field("emptyRacer").StringValue)		    end if		    if rs.Field("emptyRacer_Mask").StringValue <> "" then		      emptyRacer_Mask = stringToPicture(rs.Field("emptyRacer_Mask").StringValue)		    end if		    if rs.Field("mainLogo").StringValue <> "" then		      mainLogo = stringToPicture(rs.Field("mainLogo").StringValue)		    end if		    if rs.Field("mainLogo_Mask").StringValue <> "" then		      mainLogo_Mask = stringToPicture(rs.Field("mainLogo_Mask").StringValue)		    end if		    if rs.Field("statistics_Button").StringValue <> "" then		      statistics_Button = stringToPicture(rs.Field("statistics_Button").StringValue)		    end if		    if rs.Field("statistics_Mask").StringValue <> "" then		      statistics_Mask = stringToPicture(rs.Field("statistics_Mask").StringValue)		    end if		    if rs.Field("statistics_MouseOver").StringValue <> "" then		      statistics_MouseOver = stringToPicture(rs.Field("statistics_MouseOver").StringValue)		    end if		    if rs.Field("countdown0").StringValue <> "" then		      countdown0 = stringToPicture(rs.Field("countdown0").StringValue)		    end if		    if rs.Field("countdown1").StringValue <> "" then		      countdown1 = stringToPicture(rs.Field("countdown1").StringValue)		    end if		    if rs.Field("countdown2").StringValue <> "" then		      countdown2 = stringToPicture(rs.Field("countdown2").StringValue)		    end if		    if rs.Field("countdown3").StringValue <> "" then		      countdown3 = stringToPicture(rs.Field("countdown3").StringValue)		    end if		    if rs.Field("countdown4").StringValue <> "" then		      countdown4 = stringToPicture(rs.Field("countdown4").StringValue)		    end if		    if rs.Field("countdown5").StringValue <> "" then		      countdown5 = stringToPicture(rs.Field("countdown5").StringValue)		    end if		    if rs.Field("countdown10").StringValue <> "" then		      countdown10 = stringToPicture(rs.Field("countdown10").StringValue)		    end if		    if rs.Field("gettingStarted_Button").StringValue <> "" then		      gettingStarted_Button = stringToPicture(rs.Field("gettingStarted_Button").StringValue)		    end if		    if rs.Field("gettingStarted_Mask").StringValue <> "" then		      gettingStarted_Mask = stringToPicture(rs.Field("gettingStarted_Mask").StringValue)		    end if		    if rs.Field("setUp_Button").StringValue <> "" then		      setUp_Button = stringToPicture(rs.Field("setUp_Button").StringValue)		    end if		    if rs.Field("setUp_Mask").StringValue <> "" then		      setUp_Mask = stringToPicture(rs.Field("setUp_Mask").StringValue)		    end if		    if rs.Field("startARace_Button").StringValue <> "" then		      startARace_Button = stringToPicture(rs.Field("startARace_Button").StringValue)		    end if		    if rs.Field("startARace_Mask").StringValue <> "" then		      startARace_Mask = stringToPicture(rs.Field("startARace_Mask").StringValue)		    end if		    if rs.Field("advancedTopics_Button").StringValue <> "" then		      advancedTopics_Button = stringToPicture(rs.Field("advancedTopics_Button").StringValue)		    end if		    if rs.Field("advancedTopics_Mask").StringValue <> "" then		      advancedTopics_Mask = stringToPicture(rs.Field("advancedTopics_Mask").StringValue)		    end if		    if rs.Field("topic_Button").StringValue <> "" then		      topic_Button = stringToPicture(rs.Field("topic_Button").StringValue)		    end if		    if rs.Field("topic_Mask").StringValue <> "" then		      topic_Mask = stringToPicture(rs.Field("topic_Mask").StringValue)		    end if		    if rs.Field("navigation_Button").StringValue <> "" then		      navigation_Button = stringToPicture(rs.Field("navigation_Button").StringValue)		    end if		    if rs.Field("navigation_Mask").StringValue <> "" then		      navigation_Mask = stringToPicture(rs.Field("navigation_Mask").StringValue)		    end if		    if rs.Field("navigation_MouseOver").StringValue <> "" then		      navigation_MouseOver = stringToPicture(rs.Field("navigation_MouseOver").StringValue)		    end if		    		    //Get the coordinate offsets for button image text		    if rs.Field("topicOffsetX").StringValue <> "" then		      topicOffsetX = rs.Field("topicOffsetX").IntegerValue		    end if		    if rs.Field("topicOffsetY").StringValue <> "" then		      topicOffsetY = rs.Field("topicOffsetY").IntegerValue		    end if		    if rs.Field("navigationOffsetX").StringValue <> "" then		      navigationOffsetX = rs.Field("navigationOffsetX").IntegerValue		    end if		    if rs.Field("navigationOffsetY").StringValue <> "" then		      navigationOffsetY = rs.Field("navigationOffsetY").IntegerValue		    end if		    		    //Trigger the theme changed event so the main application knows it needs to update the screens		    themeChanged()		  end if		End Sub	#tag EndMethod	#tag Method, Flags = &h21		Private Function stringToColor(item as string) As color		  dim red,blue,green as Integer		  dim c as Color		  		  red = val(nthfieldb(item,",",1))		  blue = val(nthfieldb(item,",",2))		  green = val(nthfieldb(item,",",3))		  c = rgb(red,blue,green)		  		  return c		End Function	#tag EndMethod	#tag Method, Flags = &h21		Private Function stringToPicture(data as string) As picture		  // Convert a string to a picture		  //Data is in base64 format		  dim p as picture		  dim s as string		  dim mb as MemoryBlock		  		  s = DecodeBase64(data)		  mb = s		  		  p = p.FromData(mb)		  		  return p		  		exception// an exception occurred preventing the conversion		  return NIL		End Function	#tag EndMethod	#tag Method, Flags = &h21		Private Function stringToSound(data as string) As sound		  // Convert a string to a picture by saving the binary data		  // to a file on disk and then reading the file as a picture.		  dim f as folderItem		  dim bs as binaryStream		  dim s as sound		  dim st as string		  		  st = DecodeBase64(data)		  		  // write binary data to temporary file		  #if TargetLinux then		    f = SpecialFolder.UserHome		  #else		    f = SpecialFolder.Temporary		  #endif		  f = f.Child("tempsound.wav")		  bs = BinaryStream.Create(f,true)		  bs.write st		  bs.close		  		  // open the file as a picture		  s = f.OpenAsSound()		  		  // remove temporary file		  f.delete		  		  // return the binary data		  return s		  		exception// an exception occurred preventing the conversion		  return NIL		End Function	#tag EndMethod	#tag Hook, Flags = &h0		Event themeChanged()	#tag EndHook	#tag Hook, Flags = &h0		Event themeCreated(newTheme as string)	#tag EndHook	#tag Hook, Flags = &h0		Event themeDeleted(theme as string)	#tag EndHook	#tag Note, Name = LICENSE		Copyright 2010 Jeremy Auten				This file is part of Flip Side Racing Software.				Flip Side Racing Software is free software: you can redistribute it and/or modify		it under the terms of the GNU General Public License as published by		the Free Software Foundation, either version 3 of the License, or		(at your option) any later version.				Flip Side Racing Software is distributed in the hope that it will be useful,		but WITHOUT ANY WARRANTY; without even the implied warranty of		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the		GNU General Public License for more details.				You should have received a copy of the GNU General Public License		along with Flip Side Racing Software.  If not, see <http://www.gnu.org/licenses/>.	#tag EndNote	#tag Property, Flags = &h0		advancedTopics_Button As Picture	#tag EndProperty	#tag Property, Flags = &h0		advancedTopics_Mask As Picture	#tag EndProperty	#tag Property, Flags = &h0		backgroundColor As Color = &c000000	#tag EndProperty	#tag Property, Flags = &h0		backgroundImage As Picture	#tag EndProperty	#tag Property, Flags = &h0		countdown0 As Picture	#tag EndProperty	#tag Property, Flags = &h0		countdown1 As Picture	#tag EndProperty	#tag Property, Flags = &h0		countdown10 As Picture	#tag EndProperty	#tag Property, Flags = &h0		countdown2 As Picture	#tag EndProperty	#tag Property, Flags = &h0		countdown3 As Picture	#tag EndProperty	#tag Property, Flags = &h0		countdown4 As Picture	#tag EndProperty	#tag Property, Flags = &h0		countdown5 As Picture	#tag EndProperty	#tag Property, Flags = &h0		countdownBeep As Sound	#tag EndProperty	#tag Property, Flags = &h0		defaultText As Color = &cB8B8B8	#tag EndProperty	#tag Property, Flags = &h0		editRacerScreenText1 As Color = &c338C4A	#tag EndProperty	#tag Property, Flags = &h0		editRacerScreenText2 As Color = &cB5B5B5	#tag EndProperty	#tag Property, Flags = &h0		editRacers_Button As Picture	#tag EndProperty	#tag Property, Flags = &h0		editRacers_Mask As Picture	#tag EndProperty	#tag Property, Flags = &h0		editRacers_MouseOver As Picture	#tag EndProperty	#tag Property, Flags = &h0		emptyRacer As Picture	#tag EndProperty	#tag Property, Flags = &h0		emptyRacer_Mask As Picture	#tag EndProperty	#tag Property, Flags = &h0		endingHorn As Sound	#tag EndProperty	#tag Property, Flags = &h0		F_countdownBeep As FolderItem	#tag EndProperty	#tag Property, Flags = &h0		F_endingHorn As FolderItem	#tag EndProperty	#tag Property, Flags = &h0		F_lapBeep As FolderItem	#tag EndProperty	#tag Property, Flags = &h0		F_startingHorn As FolderItem	#tag EndProperty	#tag Property, Flags = &h0		generalConfigScreenText As Color = &cB8B8B8	#tag EndProperty	#tag Property, Flags = &h0		generalConfig_Button As Picture	#tag EndProperty	#tag Property, Flags = &h0		generalConfig_Mask As Picture	#tag EndProperty	#tag Property, Flags = &h0		generalConfig_MouseOver As Picture	#tag EndProperty	#tag Property, Flags = &h0		gettingStarted_Button As Picture	#tag EndProperty	#tag Property, Flags = &h0		gettingStarted_Mask As Picture	#tag EndProperty	#tag Property, Flags = &h0		lapBeep As Sound	#tag EndProperty	#tag Property, Flags = &h0		mainLogo As Picture	#tag EndProperty	#tag Property, Flags = &h0		mainLogo_Mask As Picture	#tag EndProperty	#tag Property, Flags = &h0		mainScreenText As Color = &cB5B5B5	#tag EndProperty	#tag Property, Flags = &h0		main_Button As Picture	#tag EndProperty	#tag Property, Flags = &h0		main_Mask As Picture	#tag EndProperty	#tag Property, Flags = &h0		main_MouseOver As Picture	#tag EndProperty	#tag Property, Flags = &h0		navigationOffsetX As Integer = 0	#tag EndProperty	#tag Property, Flags = &h0		navigationOffsetY As Integer = 0	#tag EndProperty	#tag Property, Flags = &h0		navigationText As Color = &cFFFFFF	#tag EndProperty	#tag Property, Flags = &h0		navigation_Button As Picture	#tag EndProperty	#tag Property, Flags = &h0		navigation_Mask As Picture	#tag EndProperty	#tag Property, Flags = &h0		navigation_MouseOver As Picture	#tag EndProperty	#tag Property, Flags = &h0		raceConfigScreenText1 As Color = &cB8B8B8	#tag EndProperty	#tag Property, Flags = &h0		raceConfigScreenText2 As Color = &cB8B8B8	#tag EndProperty	#tag Property, Flags = &h0		raceConfigScreenText3 As Color = &cB8B8B8	#tag EndProperty	#tag Property, Flags = &h0		raceConfig_Button As Picture	#tag EndProperty	#tag Property, Flags = &h0		raceConfig_Mask As Picture	#tag EndProperty	#tag Property, Flags = &h0		raceConfig_MouseOver As Picture	#tag EndProperty	#tag Property, Flags = &h0		raceScreenText As Color = &cB8B8B8	#tag EndProperty	#tag Property, Flags = &h0		raceScreen_Button As Picture	#tag EndProperty	#tag Property, Flags = &h0		raceScreen_Mask As picture	#tag EndProperty	#tag Property, Flags = &h0		raceScreen_MouseOver As Picture	#tag EndProperty	#tag Property, Flags = &h0		scaleBackground As Boolean = false	#tag EndProperty	#tag Property, Flags = &h0		setUp_Button As Picture	#tag EndProperty	#tag Property, Flags = &h0		setUp_Mask As Picture	#tag EndProperty	#tag Property, Flags = &h0		startARace_Button As Picture	#tag EndProperty	#tag Property, Flags = &h0		startARace_Mask As Picture	#tag EndProperty	#tag Property, Flags = &h0		startingHorn As Sound	#tag EndProperty	#tag Property, Flags = &h0		statisticsScreenText As Color = &cB8B8B8	#tag EndProperty	#tag Property, Flags = &h0		statistics_Button As Picture	#tag EndProperty	#tag Property, Flags = &h0		statistics_Mask As Picture	#tag EndProperty	#tag Property, Flags = &h0		statistics_MouseOver As Picture	#tag EndProperty	#tag Property, Flags = &h0		S_countdownBeep As String	#tag EndProperty	#tag Property, Flags = &h0		S_endingHorn As String	#tag EndProperty	#tag Property, Flags = &h0		S_lapBeep As String	#tag EndProperty	#tag Property, Flags = &h0		S_startingHorn As String	#tag EndProperty	#tag Property, Flags = &h0		themeDB As REALSQLDatabase	#tag EndProperty	#tag Property, Flags = &h0		themeName As String	#tag EndProperty	#tag Property, Flags = &h0		topicOffsetX As Integer = 0	#tag EndProperty	#tag Property, Flags = &h0		topicOffsetY As Integer = 0	#tag EndProperty	#tag Property, Flags = &h0		topicText As Color = &c000000	#tag EndProperty	#tag Property, Flags = &h0		topic_Button As Picture	#tag EndProperty	#tag Property, Flags = &h0		topic_Mask As Picture	#tag EndProperty	#tag Property, Flags = &h0		version As Integer = 0	#tag EndProperty	#tag ViewBehavior		#tag ViewProperty			Name="advancedTopics_Button"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="advancedTopics_Mask"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="backgroundColor"			Group="Behavior"			InitialValue="&h000000"			Type="Color"		#tag EndViewProperty		#tag ViewProperty			Name="backgroundImage"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="countdown0"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="countdown1"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="countdown10"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="countdown2"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="countdown3"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="countdown4"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="countdown5"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="countdownBeep"			Group="Behavior"			InitialValue="0"			Type="Sound"		#tag EndViewProperty		#tag ViewProperty			Name="defaultText"			Group="Behavior"			InitialValue="&h000000"			Type="Color"		#tag EndViewProperty		#tag ViewProperty			Name="editRacerScreenText1"			Group="Behavior"			InitialValue="&c338C4A"			Type="Color"		#tag EndViewProperty		#tag ViewProperty			Name="editRacerScreenText2"			Group="Behavior"			InitialValue="&cB5B5B5"			Type="Color"		#tag EndViewProperty		#tag ViewProperty			Name="editRacers_Button"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="editRacers_Mask"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="editRacers_MouseOver"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="emptyRacer"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="emptyRacer_Mask"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="endingHorn"			Group="Behavior"			InitialValue="0"			Type="Sound"		#tag EndViewProperty		#tag ViewProperty			Name="generalConfigScreenText"			Group="Behavior"			InitialValue="&h000000"			Type="Color"		#tag EndViewProperty		#tag ViewProperty			Name="generalConfig_Button"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="generalConfig_Mask"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="generalConfig_MouseOver"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="gettingStarted_Button"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="gettingStarted_Mask"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			Type="Integer"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="lapBeep"			Group="Behavior"			InitialValue="0"			Type="Sound"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="mainLogo"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="mainLogo_Mask"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="mainScreenText"			Group="Behavior"			InitialValue="&h000000"			Type="Color"		#tag EndViewProperty		#tag ViewProperty			Name="main_Button"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="main_Mask"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="main_MouseOver"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="navigationOffsetX"			Group="Behavior"			InitialValue="0"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="navigationOffsetY"			Group="Behavior"			InitialValue="0"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="navigationText"			Group="Behavior"			InitialValue="&cFFFFFF"			Type="Color"		#tag EndViewProperty		#tag ViewProperty			Name="navigation_Button"			Group="Behavior"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="navigation_Mask"			Group="Behavior"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="navigation_MouseOver"			Group="Behavior"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="raceConfigScreenText1"			Group="Behavior"			InitialValue="&h000000"			Type="Color"		#tag EndViewProperty		#tag ViewProperty			Name="raceConfigScreenText2"			Group="Behavior"			InitialValue="&h000000"			Type="Color"		#tag EndViewProperty		#tag ViewProperty			Name="raceConfigScreenText3"			Group="Behavior"			InitialValue="&h000000"			Type="Color"		#tag EndViewProperty		#tag ViewProperty			Name="raceConfig_Button"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="raceConfig_Mask"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="raceConfig_MouseOver"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="raceScreenText"			Group="Behavior"			InitialValue="&h000000"			Type="Color"		#tag EndViewProperty		#tag ViewProperty			Name="raceScreen_Button"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="raceScreen_Mask"			Group="Behavior"			InitialValue="0"			Type="picture"		#tag EndViewProperty		#tag ViewProperty			Name="raceScreen_MouseOver"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="scaleBackground"			Group="Behavior"			InitialValue="false"			Type="Boolean"		#tag EndViewProperty		#tag ViewProperty			Name="setUp_Button"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="setUp_Mask"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="startARace_Button"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="startARace_Mask"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="startingHorn"			Group="Behavior"			InitialValue="0"			Type="Sound"		#tag EndViewProperty		#tag ViewProperty			Name="statisticsScreenText"			Group="Behavior"			InitialValue="&h000000"			Type="Color"		#tag EndViewProperty		#tag ViewProperty			Name="statistics_Button"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="statistics_Mask"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="statistics_MouseOver"			Group="Behavior"			InitialValue="0"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="S_countdownBeep"			Group="Behavior"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="S_endingHorn"			Group="Behavior"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="S_lapBeep"			Group="Behavior"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="S_startingHorn"			Group="Behavior"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="themeName"			Group="Behavior"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="topicOffsetX"			Group="Behavior"			InitialValue="0"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="topicOffsetY"			Group="Behavior"			InitialValue="0"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="topicText"			Group="Behavior"			InitialValue="&c000000"			Type="Color"		#tag EndViewProperty		#tag ViewProperty			Name="topic_Button"			Group="Behavior"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="topic_Mask"			Group="Behavior"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="version"			Group="Behavior"			InitialValue="0"			Type="Integer"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass