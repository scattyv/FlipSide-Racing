#tag ClassProtected Class DLPIOR4Inherits Serial	#tag Method, Flags = &h0		Sub enablePort(serialportpath as string, terminal as integer, port as string)		  'This method allows you to enable a specific output on the DLP IOR4 USB relay board		  'The serial port path needs to be set to the inputdrivername of the serial port, not the name		  dim commandstring as string		  		  'set the command string based on given options		  select case port		  case "a", "A"		    select case terminal		    case 1		      commandstring = "1"		    case 2		      commandstring = "2"		    case 3		      commandstring = "3"		    case 4		      commandstring = "4"		    Else		      return		    end select		  case "b", "B"		    select case terminal		    case 1		      commandstring = "Q"		    case 2		      commandstring = "W"		    case 3		      commandstring = "E"		    case 4		      commandstring = "R"		    Else		      return		    end select		  Else		    return		  end select		  		  		  		  'set up the port and send data		  me.Baud = 9600		  if not me.Open then		    msgbox "error opening port"		    return		  end		  me.Write(commandstring)		  		  return		  		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function ping(serialportpath as string) As boolean		  dim result as string		  		  me.Baud = 9600		  		  if not me.Open then		    return false		  end		  		  'Ping command is one byte, expects a R, &h52, in return		  me.Write(chrB(&h27))		  		  'wait for command to be sent		  me.XmitWait		  		  'read the result		  result = me.Read(1)		  		  'check the value		  If result = "R" then		    return true		  else		    return false		  end if		  		  		  		End Function	#tag EndMethod	#tag Note, Name = LICENSE		Copyright 2008 Jeremy Auten				This file is part of Flip Side Racing Software.				Flip Side Racing Software is free software: you can redistribute it and/or modify		it under the terms of the GNU General Public License as published by		the Free Software Foundation, either version 3 of the License, or		(at your option) any later version.				Flip Side Racing Software is distributed in the hope that it will be useful,		but WITHOUT ANY WARRANTY; without even the implied warranty of		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the		GNU General Public License for more details.				You should have received a copy of the GNU General Public License		along with Flip Side Racing Software.  If not, see <http://www.gnu.org/licenses/>.	#tag EndNote	#tag Constant, Name = kEditClear, Type = String, Dynamic = False, Default = \"&Delete", Scope = Public		#Tag Instance, Platform = Windows, Language = Default, Definition  = \"&Delete"		#Tag Instance, Platform = Linux, Language = Default, Definition  = \"&Delete"	#tag EndConstant	#tag Constant, Name = kFileQuit, Type = String, Dynamic = False, Default = \"&Quit", Scope = Public		#Tag Instance, Platform = Windows, Language = Default, Definition  = \"E&xit"	#tag EndConstant	#tag Constant, Name = kFileQuitShortcut, Type = String, Dynamic = False, Default = \"", Scope = Public		#Tag Instance, Platform = Mac OS, Language = Default, Definition  = \"Cmd+Q"		#Tag Instance, Platform = Linux, Language = Default, Definition  = \"Ctrl+Q"	#tag EndConstant	#tag ViewBehavior		#tag ViewProperty			Name="Baud"			Visible=true			Group="Behavior"			InitialValue="13"			Type="Integer"			EditorType="Enum"			InheritedFrom="Serial"			#tag EnumValues				"0 - 300"				"1 - 600"				"2 - 1200"				"3 - 1800"				"4 - 2400"				"5 - 3600"				"6 - 4800"				"7 - 7200"				"8 - 9600"				"9 - 14400"				"10 - 19200"				"11 - 28800"				"12 - 38400"				"13 - 57600"				"14 - 115200"				"15 - 230400"			#tag EndEnumValues		#tag EndViewProperty		#tag ViewProperty			Name="Bits"			Visible=true			Group="Behavior"			InitialValue="3"			Type="Integer"			EditorType="Enum"			InheritedFrom="Serial"			#tag EnumValues				"0 - 5 Data Bits"				"1 - 6 Data Bits"				"2 - 7 Data Bits"				"3 - 8 Data bits"			#tag EndEnumValues		#tag EndViewProperty		#tag ViewProperty			Name="CTS"			Visible=true			Group="Behavior"			Type="Boolean"			InheritedFrom="Serial"		#tag EndViewProperty		#tag ViewProperty			Name="DTR"			Visible=true			Group="Behavior"			Type="Boolean"			InheritedFrom="Serial"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="2147483648"			Type="Integer"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Parity"			Visible=true			Group="Behavior"			InitialValue="0"			Type="Integer"			EditorType="Enum"			InheritedFrom="Serial"			#tag EnumValues				"0 - No Parity"				"1 - Odd Parity"				"2 - EvenParity"			#tag EndEnumValues		#tag EndViewProperty		#tag ViewProperty			Name="Stop"			Visible=true			Group="Behavior"			InitialValue="0"			Type="Integer"			EditorType="Enum"			InheritedFrom="Serial"			#tag EnumValues				"0 - 1 Stop Bit"				"1 - 1.5 Stop Bits"				"2 - 2 Stop Bits"			#tag EndEnumValues		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="XON"			Visible=true			Group="Behavior"			Type="Boolean"			InheritedFrom="Serial"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass