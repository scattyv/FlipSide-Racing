#tag WindowBegin ContainerControl eventControlTree   AcceptFocus     =   ""   AcceptTabs      =   ""   AutoDeactivate  =   True   BackColor       =   16777215   Backdrop        =   ""   Enabled         =   True   EraseBackground =   True   HasBackColor    =   False   Height          =   400   HelpTag         =   ""   InitialParent   =   ""   Left            =   0   LockBottom      =   ""   LockLeft        =   ""   LockRight       =   ""   LockTop         =   ""   TabIndex        =   0   TabPanelIndex   =   0   TabStop         =   True   Top             =   0   UseFocusRing    =   ""   Visible         =   True   Width           =   600   Begin Listbox emListbox      AutoDeactivate  =   True      AutoHideScrollbars=   True      Bold            =   ""      Border          =   True      ColumnCount     =   5      ColumnsResizable=   True      ColumnWidths    =   ""      DataField       =   ""      DataSource      =   ""      DefaultRowHeight=   -1      Enabled         =   True      EnableDrag      =   False      EnableDragReorder=   True      GridLinesHorizontal=   1      GridLinesVertical=   2      HasHeading      =   False      HeadingIndex    =   -1      Height          =   348      HelpTag         =   ""      Hierarchical    =   True      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   ""      Italic          =   ""      Left            =   0      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   True      RequiresSelection=   True      Scope           =   0      ScrollbarHorizontal=   ""      ScrollBarVertical=   True      SelectionType   =   0      TabIndex        =   0      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   0      Underline       =   ""      UseFocusRing    =   True      Visible         =   True      Width           =   600      _ScrollWidth    =   -1   End   Begin PushButton PushButton1      AutoDeactivate  =   True      Bold            =   ""      ButtonStyle     =   0      Cancel          =   ""      Caption         =   "Add"      Default         =   ""      Enabled         =   False      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   0      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   ""      LockTop         =   ""      Scope           =   0      TabIndex        =   1      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   360      Underline       =   ""      Visible         =   False      Width           =   120   End   Begin PushButton PushButton2      AutoDeactivate  =   True      Bold            =   ""      ButtonStyle     =   0      Cancel          =   ""      Caption         =   "Delete"      Default         =   ""      Enabled         =   False      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   132      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   ""      LockTop         =   ""      Scope           =   0      TabIndex        =   2      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   360      Underline       =   ""      Visible         =   False      Width           =   120   End   Begin PushButton PushButton3      AutoDeactivate  =   True      Bold            =   ""      ButtonStyle     =   0      Cancel          =   ""      Caption         =   "Run"      Default         =   ""      Enabled         =   False      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   264      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   ""      LockTop         =   ""      Scope           =   0      TabIndex        =   3      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   360      Underline       =   ""      Visible         =   False      Width           =   120   End   Begin PushButton PushButton4      AutoDeactivate  =   True      Bold            =   ""      ButtonStyle     =   0      Cancel          =   ""      Caption         =   "Hide"      Default         =   ""      Enabled         =   False      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   396      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   ""      LockTop         =   ""      Scope           =   0      TabIndex        =   4      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   360      Underline       =   ""      Visible         =   False      Width           =   120   EndEnd#tag EndWindow#tag WindowCode	#tag Method, Flags = &h21		Private Sub buttonAction(action As String)		  //Performs the action that the button is currently defined to do		  		  select case action		    		  case "Add Class"		    dim inputWindow as new strInputWindow		    dim classPair as pair		    classPair = inputWindow.promptInput("imatitle","imamessage",True)		    		    if classPair.Left.BooleanValue = True then		      dim returnID as integer		      returnID = fsEventManager.addClass(classPair.Right.StringValue)		      classAdded(classPair.Right.StringValue,str(returnID))		    end if		    		  case "Delete Class"		    fsEventManager.deleteClass(itemID)		    		  case "Event Add Racer"		    MsgBox "add some racers"		    dim selectRacers as new selectRacersWindow		    dim returnDic as new Dictionary		    returnDic = selectRacers.promptSelect(G_Database, G_Preferences)		    MsgBox str(returnDic.Count) + " Rows"		    for i as integer = 0 to returnDic.Count - 1		      		      fsEventManager.addClassRacer(returnDic.Key(i).StringValue, returnDic.Value(returnDic.Key(i)).StringValue, parentID)		      		    next		    		    		  case "Add Round"		    //Use the parent id of the round so we know the class the round should be added to		    fsEventManager.addHeatRound(val(parentID))		    MsgBox "Parent:"+parentID + ",Type:"+parentType+",Item:"+itemID+",Type:"+itemType		    		  case "Sort Mains"		    		  case "Add Main"		    fsEventManager.addMain(parentID)		    		  case "Event Delete Racer"		    		  case "Heat Add Racer"		    dim selectRacers as new selectRacersWindow		    dim returnDic as new Dictionary		    returnDic = selectRacers.promptSelect(G_Database, G_Preferences)		    		    for i as integer = 0 to returnDic.Count - 1		      fsEventManager.addHeatRacer(returnDic.Key(i).StringValue, returnDic.Value(returnDic.Key(i)).StringValue, parentID)		    next		    		  case "Heat Start Race"		    startRace(val(itemID))		  case "Main Start Race"		    startRace(val(itemID))		    		  case "Main Add Racer"		    dim selectRacers as new selectRacersWindow		    dim returnDic as new Dictionary		    returnDic = selectRacers.promptSelect(G_Database, G_Preferences)		    		    for i as integer = 0 to returnDic.Count - 1		      fsEventManager.addMainRacer(returnDic.Key(i).StringValue, returnDic.Value(returnDic.Key(i)).StringValue, itemID)		    next		    		  case "Heat Delete Racer"		    		  case "Main Delete Racer"		    		  case "Add Heat"		    fsEventManager.addHeat(val(itemID))		    		  case "Sort Heats"		    		    		  end select		  		  MsgBox action		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub classAdded(name as string, id as string)		  //Insert folder, this checks to see if we have the appropriate item selected and expands it if necessary		  insertFolder(name, "1", id, "")		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub clearEvent()		  emListbox.DeleteAllRows		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Constructor(tempEM as eventManager)		  //This is called if the control is added through code		  //If this control is added to a window directly please perform the proper initialization in the open event		  		  initialize(tempEM)		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub eventLoaded(theName as string)		  //This event populates the initial control		  dim classList as dictionary		  dim i as integer		  		  //First we should clear out all rows in the control		  emListbox.DeleteAllRows		  		  //This provides us with names and id's of classes		  classList = fsEventManager.listClasses		  		  		  i = 0		  while i < classList.Count		    i = i + 1		    //Get the name		    emListbox.AddFolder(classList.Value(classList.Key(i-1)))		    //Define the type of row		    emListbox.Cell(i-1,1) = "1"		    //Include the ID		    emListbox.Cell(i-1,2) = classList.Key(i-1)		    		    		  wend		  		  //Make sure to make the buttons visible		  setEMListBoxButtons("0")		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub heatAdded(name as string, id as string)		  //Insert folder, this checks to see if we have the appropriate item selected and expands it if necessary		  insertFolder(name, "6", id, "10")		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub heatRoundAdded(name as string, id as string)		  //Insert folder, this checks to see if we have the appropriate item selected and expands it if necessary		  insertFolder(name, "10", id, "3")		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub initialize(tempEM as eventManager)		  //This method creates objects needed for this class		  fsEventManager = tempEM		  		  		End Sub	#tag EndMethod	#tag Method, Flags = &h21		Private Sub insertFolder(name as string, type as string, id as string, parentType as string)		  //Check to see if the selected row has the correct type before adding a row		  if emListbox.cell(emListbox.ListIndex,1) = parentType then		    		    //Expand the row just in case it is not already expanded		    if emListbox.Expanded(emListbox.ListIndex) = False then		      emListbox.Expanded(emListbox.ListIndex) = True		    else		      //The row is already expanded so we need to manually add this item to the display		      emListbox.InsertFolder(emListbox.ListIndex + 1, name,3)		      emListbox.cell(emListbox.ListIndex + 1, 1) = type		      emListbox.cell(emListbox.ListIndex + 1, 2) = id		      emListbox.cell(emListbox.ListIndex + 1, 3) = parentType		      emListbox.cell(emListbox.ListIndex + 1, 4) = emListbox.Cell(emListbox.ListIndex, 2)		    end if		    		  end if		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub mainAdded(name as string, id as string)		  //Insert folder, this checks to see if we have the appropriate item selected and expands it if necessary		  insertFolder(name, "7", id, "4")		End Sub	#tag EndMethod	#tag Method, Flags = &h21		Private Sub setEMListBoxButtons(type as string)		  updateButton(1,False,False,"","")		  updateButton(2,False,False,"","")		  updateButton(3,False,False,"","")		  updateButton(4,False,False,"","")		  		  select case type		    		  case "","0","1"		    //Class selected		    updateButton(1,True,True,"Add Class","Add Class")		    updateButton(2,True,True,"Delete Class","Delete Class")		    		  case "2"		    //Registered Racers selected		    updateButton(1,True,True,"Add Racer","Event Add Racer")		    		  case "3"		    //Round List		    updateButton(1,True,True,"Add Round","Add Round")		    		  case "4"		    //Mains List		    updateButton(1,True,True,"Sort Mains","Sort Mains")		    updateButton(2,True,True,"Add Main","Add Main")		    		  case "5"		    //Registered Racer Selected		    updateButton(1,True,True,"Delete Racer","Event Delete Racer")		    		  case "6"		    //List Racers in Heat		    updateButton(1,True,True,"Add Racer","Heat Add Racer")		    updateButton(2,True,True,"Start Race","Heat Start Race")		    		  case "7"		    //List Racers in Main		    updateButton(1,True,True,"Start Race","Main Start Race")		    updateButton(2,True,True,"Add Racer","Main Add Racer")		    		  case "8"		    //Racer in Heat Selected		    updateButton(1,True,True,"Delete Racer","Heat Delete Racer")		    		  case "9"		    //Racer in Main Selected		    updateButton(1,True,True,"Delete Racer","Main Delete Racer")		    		  case "10"		    //List Heats in Round		    updateButton(2,True,True,"Add Heat","Add Heat")		    updateButton(1,True,True,"Sort Heats","Sort Heats")		    		  else		    		    		    		    		  end select		End Sub	#tag EndMethod	#tag Method, Flags = &h21		Private Sub setItemInfo()		  //Stores the type, id and name of the item selected for simplicity		  		  if emListbox.Cell(emListbox.ListIndex,2) <> "" then		    itemID = emListbox.Cell(emListbox.ListIndex,2)		  else		    itemID = "0"		  end if		  		  if emListbox.Cell(emListbox.ListIndex,1) <> "" then		    itemType = emListbox.Cell(emListbox.ListIndex,1)		  else		    itemType = "0"		  end if		  		  if emListbox.Cell(emListbox.ListIndex,0) <> "" then		    itemName = emListbox.Cell(emListbox.ListIndex,0)		  else		    itemName = "0"		  end if		  		  if emListbox.Cell(emListbox.ListIndex,3) <> "" then		    parentType = emListbox.Cell(emListbox.ListIndex,3)		  else		    parentType = "0"		  end if		  		  if emListbox.Cell(emListbox.ListIndex,4) <> "" then		    parentID = emListbox.Cell(emListbox.ListIndex,4)		  else		    parentID = "0"		  end if		End Sub	#tag EndMethod	#tag Method, Flags = &h21		Private Sub updateButton(buttonNum as Integer, enabled as Boolean, visible as Boolean, caption as String, action as String)		  //Quick method to update a button saving a few lines of code		  //This lets us keep the buttons very generic so if we rearrange controls or disable certain buttons the actions stay consistent		  dim button as new PushButton		  select case buttonNum		    		  case 1		    button = PushButton1		    button1Action = action		    		  case 2		    button = PushButton2		    button2Action = action		    		  case 3		    button = PushButton3		    button3Action = action		    		  case 4		    button = PushButton4		    button4Action = action		    		  end select		  		  		  button.Enabled = enabled		  button.Visible = visible		  button.Caption = caption		  		End Sub	#tag EndMethod	#tag Hook, Flags = &h0		Event startRace(eventItem as integer)	#tag EndHook	#tag Note, Name = License	#tag EndNote	#tag Note, Name = ReadMe		If you place this control on a Window directly please make sure to use the 		initialize method within the controls open event and pass an appropriate event 		manager object.  If creating this control within code you do not need to do this		since the Constructor method handles that.	#tag EndNote	#tag Property, Flags = &h21		Private button1Action As String	#tag EndProperty	#tag Property, Flags = &h21		Private button2Action As String	#tag EndProperty	#tag Property, Flags = &h21		Private button3Action As String	#tag EndProperty	#tag Property, Flags = &h21		Private button4Action As String	#tag EndProperty	#tag Property, Flags = &h0		fsEventManager As eventManager	#tag EndProperty	#tag Property, Flags = &h21		Private itemID As String = "0"	#tag EndProperty	#tag Property, Flags = &h21		Private itemName As String = "0"	#tag EndProperty	#tag Property, Flags = &h21		Private itemType As String = "0"	#tag EndProperty	#tag Property, Flags = &h21		Private parentID As String	#tag EndProperty	#tag Property, Flags = &h21		Private parentType As String	#tag EndProperty#tag EndWindowCode#tag Events emListbox	#tag Event		Sub DoubleClick()		  Me.expanded( Me.listindex)= Not Me.expanded( Me.listindex)		  		End Sub	#tag EndEvent	#tag Event		Function CellBackgroundPaint(g As Graphics, row As Integer, column As Integer) As Boolean		  if (row mod 2)=0 then		    g.foreColor = rgb(237,243,254)		    g.fillrect 0,0,g.Width,g.height		  end if		End Function	#tag EndEvent	#tag Event		Sub Change()		  setEMListBoxButtons(me.cell(me.ListIndex,1))		  setItemInfo		  		  MsgBox str(me.Cell(me.ListIndex,1))		End Sub	#tag EndEvent	#tag Event		Sub Open()		  //setEMListBoxButtons("1")		  //setItemInfo		End Sub	#tag EndEvent	#tag Event		Sub ExpandRow(row As Integer)		  dim rowDictionary as new Dictionary		  dim rowType as string		  dim i as integer		  		  //Make sure to select this row		  me.ListIndex = row		  		  select case me.cell(row,1)		    		  case "1"		    //They expanded a class		    me.AddFolder("Registered Racers")		    me.Cell(row + 1,1) = "2"		    me.Cell(row + 1,2) = "5"		    me.Cell(row + 1,3) = me.Cell(row,1)		    me.Cell(row + 1,4) = me.Cell(row,2)		    me.AddFolder("Heats")		    me.Cell(row + 2,1) = "3"		    me.Cell(row + 2,2) = "6"		    me.Cell(row + 2,3) = me.Cell(row,1)		    me.Cell(row + 2,4) = me.Cell(row,2)		    me.AddFolder("Mains")		    me.Cell(row + 3,1) = "4"		    me.Cell(row + 3,2) = "7"		    me.Cell(row + 3,3) = me.Cell(row,1)		    me.Cell(row + 3,4) = me.Cell(row,2)		  case "2"		    //Registered Racers		    rowDictionary = fsEventManager.listClassRacers(parentID)		    rowType = "5"		    		  case "3"		    //Rounds List		    rowDictionary = fsEventManager.listHeatRounds(parentID)		    rowType = "10"		    //case "3"		    //Heats List		    //rowDictionary = fsEventManager.listHeats		    //rowType = "6"		    		  case "4"		    //Mains List		    rowDictionary = fsEventManager.listMains(parentID)		    rowType = "7"		    		  case "5"		    //Racers		    MsgBox "5?"		    		  case "6"		    //Clicked on a Heat		    		    //Also list the race		    		    //Racers in Heat		    rowDictionary = fsEventManager.listHeatRacers(parentID)		    rowType = "8"		    		  case "7"		    //Racers in Main		    rowDictionary = fsEventManager.listMainRacers(itemID)		    rowType = "9"		    		  case "10"		    //Heats List		    		    rowDictionary = fsEventManager.listHeats(itemID)		    rowType = "6"		    		  case "11"		    //Racer assignments for all heats in a round		    		  case "12"		    //Racer assigned to a particular heat		    		    		  end select		  		  //if we got a dictionary to work with iterate over it and build the rows		  i = 0		  while i < rowDictionary.Count		    i = i + 1		    //Check to see if this is a folder we are adding or just a plain row		    if rowType = "7" or rowType = "6" or rowType = "10" then		      me.AddFolder(rowDictionary.Value(rowDictionary.Key(i-1)))		    else		      dim value as string		      value = rowDictionary.Value(rowDictionary.Key(i-1))		      me.AddRow value		    end if		    //Define the type of row		    me.Cell(row+i,1) = rowType		    //Include the ID		    me.Cell(row+i,2) = rowDictionary.Key(i-1)		    //Identify parent		    me.Cell(row+i,3) = me.Cell(row,1)		    me.Cell(row+i,4) = me.Cell(row,2)		  wend		End Sub	#tag EndEvent	#tag Event		Sub CollapseRow(row As Integer)		  //Select the row that was clicked		  me.ListIndex = row		End Sub	#tag EndEvent#tag EndEvents#tag Events PushButton1	#tag Event		Sub Action()		  buttonAction(button1Action)		End Sub	#tag EndEvent#tag EndEvents#tag Events PushButton2	#tag Event		Sub Action()		  buttonAction(button2Action)		End Sub	#tag EndEvent#tag EndEvents#tag Events PushButton3	#tag Event		Sub Action()		  buttonAction(button3Action)		End Sub	#tag EndEvent#tag EndEvents#tag Events PushButton4	#tag Event		Sub Action()		  buttonAction(button4Action)		End Sub	#tag EndEvent#tag EndEvents