#tag ClassProtected Class TTSThreadInherits Thread	#tag Event		Sub Run()		  while true		    dim text as string		    dim interrupt as boolean		    		    while UBound(mtext) >= 0		      text = mtext(0)		      interrupt = minterrupt(0)		      mtext.Remove 0		      minterrupt.Remove 0		      speak(text, interrupt)		    wend		    		    me.Sleep(100)		  wend		  		End Sub	#tag EndEvent	#tag Method, Flags = &h0		Sub Append(text as string, interrupt as boolean)		  mtext.Append(text)		  minterrupt.Append(interrupt)		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Insert(text as string, interrupt as boolean)		  mtext.Insert(0,text)		  minterrupt.Insert(0,interrupt)		End Sub	#tag EndMethod	#tag Property, Flags = &h1		Protected minterrupt() As boolean	#tag EndProperty	#tag Property, Flags = &h1		Protected mtext() As string	#tag EndProperty	#tag ViewBehavior		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			Type="Integer"			InheritedFrom="Thread"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InheritedFrom="Thread"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Thread"		#tag EndViewProperty		#tag ViewProperty			Name="Priority"			Visible=true			Group="Behavior"			InitialValue="5"			Type="Integer"			InheritedFrom="Thread"		#tag EndViewProperty		#tag ViewProperty			Name="StackSize"			Visible=true			Group="Behavior"			InitialValue="0"			Type="Integer"			InheritedFrom="Thread"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Thread"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InheritedFrom="Thread"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass